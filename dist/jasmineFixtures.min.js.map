{"version":3,"sources":["jasmineFixtures.js"],"names":["window","jasmineFixtures","version","config","basePath","containerId","styleNodes","cache","clearCache","clearCSS","forEach","element","parentNode","removeChild","clearHTML","container","getContainer","appendCSS","path","preload","appendStyle","readFromCache","appendHTML","appendToContainer","loadCSS","loadHTML","loadIntoContainer","fullUrl","assembleUrl","undefined","readIntoCache","read","setCSS","css","setHTML","html","setup","options","length","cssNode","document","createElement","innerHTML","push","querySelector","appendChild","currentContainer","getElementById","setAttribute","body","url","jQuery","ajax","async","method","done","data","fail","jqXHR","status","jasmine","getEnv","afterEach"],"mappings":";;;;;;KACA,IAAAA,OAAA,kBACAA,OAAAC,oBAIA,WACA,aAEAA,gBAAAC,QAAA,MAKA,MAAAC,QACAC,SAAA,YACAC,YAAA,oBAMAC,cAKAL,gBAAAM,SAEAN,gBAAAO,WAAA,WACAP,gBAAAM,UAGAN,gBAAAQ,SAAA,WACAH,WAAAI,QAAA,SAAAC,SACA,OAAAA,QAAAC,YACAD,QAAAC,WAAAC,YAAAF,YAKAV,gBAAAa,UAAA,WACA,MAAAC,UAAAC,eACAD,UAAAH,WAAAC,YAAAE,YAMAd,gBAAAgB,UAAA,SAAAC,MACAjB,gBAAAkB,QAAAD,MACAE,YAAAC,cAAAH,QAMAjB,gBAAAqB,WAAA,SAAAJ,MACAjB,gBAAAkB,QAAAD,MACAK,kBAAAF,cAAAH,QAMAjB,gBAAAuB,QAAA,SAAAN,MACAjB,gBAAAkB,QAAAD,MACAjB,gBAAAQ,WACAW,YAAAC,cAAAH,QAMAjB,gBAAAwB,SAAA,SAAAP,MACAjB,gBAAAkB,QAAAD,MACAQ,kBAAAL,cAAAH,QAMAjB,gBAAAkB,QAAA,SAAAD,MACA,iBAAAA,OACAA,MAAAA,OAEAA,KAAAR,QAAA,SAAAC,SACA,MAAAgB,QAAAC,YAAAjB,cACAkB,IAAA5B,gBAAAM,MAAAoB,UACAG,cAAAH,YASA1B,gBAAA8B,KAAA,SAAAb,MAEA,OADAjB,gBAAAkB,QAAAD,MACAG,cAAAH,OAMAjB,gBAAA+B,OAAA,SAAAC,KACAhC,gBAAAQ,WACAW,YAAAa,MAMAhC,gBAAAiC,QAAA,SAAAC,MACAT,kBAAAS,OAQAlC,gBAAAmC,MAAA,SAAAC,SAaA,YAZAR,IAAAQ,eACAR,IAAAQ,QAAAhC,cACAF,OAAAE,YAAAgC,QAAAhC,kBAEAwB,IAAAQ,QAAAjC,WACAD,OAAAC,SAAAiC,QAAAjC,UAGA,MAAAD,OAAAC,SAAAD,OAAAC,SAAAkC,OAAA,KACAnC,OAAAC,UAAA,MAGAD,QAMA,MAAAiB,YAAA,SAAAa,KACA,MAAAM,QAAAC,SAAAC,cAAA,SACAF,QAAAG,UAAAT,IACA3B,WAAAqC,KAAAJ,SACAC,SAAAI,cAAA,QAAAC,YAAAN,UAMAhB,kBAAA,SAAAY,MACAnB,eACA0B,WAAAP,MAOAP,YAAA,SAAAV,MACA,OAAAf,OAAAC,SAAAc,MAMAF,aAAA,WACA,MAAA8B,iBAAAN,SAAAO,eAAA5C,OAAAE,aACA,GAAA,OAAAyC,iBACA,OAAAA,iBAEA,CACA,MAAA/B,UAAAyB,SAAAC,cAAA,OAGA,OAFA1B,UAAAiC,aAAA,KAAA7C,OAAAE,aACAmC,SAAAS,KAAAJ,YAAA9B,WACAA,YAOAW,kBAAA,SAAAS,MACAnB,eACA0B,UAAAP,MAOAd,cAAA,SAAAH,MACA,OAAAjB,gBAAAM,MAAAqB,YAAAV,QAMAY,cAAA,SAAAoB,KACAC,OAAAC,MACAF,IAAAA,IACAG,OAAA,EACA9C,OAAA,EACA+C,OAAA,QACAC,KAAA,SAAAC,MACAvD,gBAAAM,MAAA2C,KAAAM,OACAC,KAAA,SAAAC,OACA,KAAA,kCAAAR,IAAA,aAAAQ,MAAAC,OAAA,OA3MA,GAiNAC,QAAAC,SAAAC,UAAA,WACA,aACA7D,gBAAAQ,WACAR,gBAAAa","file":"jasmineFixtures.min.js","sourcesContent":["/* istanbul ignore else */\r\nif(typeof(window.jasmineFixtures) === \"undefined\"){\r\n\twindow.jasmineFixtures = {};\r\n}\r\n\r\n/**\r\n * @typedef {Object} jasmineFixtures.options\r\n *\r\n * @property {String} basePath        Base path for fixtures. Default to \"fixtures/\"\r\n * @property {String} containerId     Used as id attribute for the <div> where fixtures are loaded. Default to \"jasmine-fixtures\"\r\n */\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\r\n\tjasmineFixtures.version = \"1.0\";\r\n\r\n\t/**\r\n\t * @type {jasmineFixtures.options}\r\n\t */\r\n\tconst config = {\r\n\t\tbasePath: \"fixtures/\",\r\n\t\tcontainerId: \"jasmine-fixtures\"\r\n\t};\r\n\r\n\t/**\r\n\t * @type {Array.<HTMLElement>}\r\n\t */\r\n\tconst styleNodes = [];\r\n\r\n\t/**\r\n\t * @type {Object.<String, String>}\r\n\t */\r\n\tjasmineFixtures.cache = {};\r\n\r\n\tjasmineFixtures.clearCache = function(){\r\n\t\tjasmineFixtures.cache = {};\r\n\t};\r\n\r\n\tjasmineFixtures.clearCSS = function(){\r\n\t\tstyleNodes.forEach(function(element){\r\n\t\t\tif(element.parentNode !== null){\r\n\t\t\t\telement.parentNode.removeChild(element);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tjasmineFixtures.clearHTML = function(){\r\n\t\tconst container = getContainer();\r\n\t\tcontainer.parentNode.removeChild(container);\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} path\r\n\t */\r\n\tjasmineFixtures.appendCSS = function(path){\r\n\t\tjasmineFixtures.preload(path);\r\n\t\tappendStyle(readFromCache(path));\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} path\r\n\t */\r\n\tjasmineFixtures.appendHTML = function(path){\r\n\t\tjasmineFixtures.preload(path);\r\n\t\tappendToContainer(readFromCache(path));\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} path\r\n\t */\r\n\tjasmineFixtures.loadCSS = function(path){\r\n\t\tjasmineFixtures.preload(path);\r\n\t\tjasmineFixtures.clearCSS();\r\n\t\tappendStyle(readFromCache(path));\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} path\r\n\t */\r\n\tjasmineFixtures.loadHTML = function(path){\r\n\t\tjasmineFixtures.preload(path);\r\n\t\tloadIntoContainer(readFromCache(path));\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String|Array.<String>} path\r\n\t */\r\n\tjasmineFixtures.preload = function(path){\r\n\t\tif(typeof path === \"string\"){\r\n\t\t\tpath = [path];\r\n\t\t}\r\n\t\tpath.forEach(function(element){\r\n\t\t\tconst fullUrl = assembleUrl(element);\r\n\t\t\tif(jasmineFixtures.cache[fullUrl] === undefined){\r\n\t\t\t\treadIntoCache(fullUrl);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} path\r\n\t * @return {String|Object}\r\n\t */\r\n\tjasmineFixtures.read = function(path){\r\n\t\tjasmineFixtures.preload(path);\r\n\t\treturn readFromCache(path);\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} css\r\n\t */\r\n\tjasmineFixtures.setCSS = function(css){\r\n\t\tjasmineFixtures.clearCSS();\r\n\t\tappendStyle(css);\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} html\r\n\t */\r\n\tjasmineFixtures.setHTML = function(html){\r\n\t\tloadIntoContainer(html);\r\n\t};\r\n\r\n\t/**\r\n\t * Change/retrieve current configuration\r\n\t * @param {jasmineFixtures.options} [options]\r\n\t * @return {jasmineFixtures.options}\r\n\t */\r\n\tjasmineFixtures.setup = function(options){\r\n\t\tif(options !== undefined){\r\n\t\t\tif(options.containerId !== undefined){\r\n\t\t\t\tconfig.containerId = options.containerId;\r\n\t\t\t}\r\n\t\t\tif(options.basePath !== undefined){\r\n\t\t\t\tconfig.basePath = options.basePath;\r\n\t\t\t}\r\n\t\t\t// Ensure we always have a trailing slash\r\n\t\t\tif(config.basePath[config.basePath.length - 1] !== \"/\"){\r\n\t\t\t\tconfig.basePath += \"/\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn config;\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} css\r\n\t */\r\n\tconst appendStyle = function(css){\r\n\t\tconst cssNode = document.createElement(\"style\");\r\n\t\tcssNode.innerHTML = css;\r\n\t\tstyleNodes.push(cssNode);\r\n\t\tdocument.querySelector(\"head\").appendChild(cssNode);\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} html\r\n\t */\r\n\tconst appendToContainer = function(html){\r\n\t\tconst container = getContainer();\r\n\t\tcontainer.innerHTML += html;\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} path\r\n\t * @return {String}\r\n\t */\r\n\tconst assembleUrl = function(path){\r\n\t\treturn config.basePath + path;\r\n\t};\r\n\r\n\t/**\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tconst getContainer = function(){\r\n\t\tconst currentContainer = document.getElementById(config.containerId);\r\n\t\tif(currentContainer !== null){\r\n\t\t\treturn currentContainer;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst container = document.createElement(\"div\");\r\n\t\t\tcontainer.setAttribute(\"id\", config.containerId);\r\n\t\t\tdocument.body.appendChild(container);\r\n\t\t\treturn container;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} html\r\n\t */\r\n\tconst loadIntoContainer = function(html){\r\n\t\tconst container = getContainer();\r\n\t\tcontainer.innerHTML = html;\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} path\r\n\t * @return {String|Object}\r\n\t */\r\n\tconst readFromCache = function(path){\r\n\t\treturn jasmineFixtures.cache[assembleUrl(path)];\r\n\t};\r\n\r\n\t/**\r\n\t * @param {String} url\r\n\t */\r\n\tconst readIntoCache = function(url){\r\n\t\tjQuery.ajax({\r\n\t\t\turl: url,\r\n\t\t\tasync: false, // Must be synchronous to ensure fixtures are loaded before test run\r\n\t\t\tcache: false,\r\n\t\t\tmethod: \"GET\"\r\n\t\t}).done(function(data){\r\n\t\t\tjasmineFixtures.cache[url] = data;\r\n\t\t}).fail(function(jqXHR){\r\n\t\t\tthrow (\"Failed to retrieve fixture at: \" + url + \" (status: \" + jqXHR.status + \")\");\r\n\t\t});\r\n\t};\r\n\r\n}());\r\n\r\njasmine.getEnv().afterEach(function(){\r\n\t\"use strict\";\r\n\tjasmineFixtures.clearCSS();\r\n\tjasmineFixtures.clearHTML();\r\n});"],"sourceRoot":"."}